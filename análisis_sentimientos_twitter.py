# -*- coding: utf-8 -*-
"""Análisis Sentimientos Twitter

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UI4NurhrPXaDhUpmTwlB6U13Yr7kxVor

Lo primero que hacemos en acceder a nuestro archivo Sentimientos.txt y lo organizamos en un diccionario, asociando a cada sentimiento el entero correspondiente.
"""

sentimientos = open("Sentimientos.txt")
valores = {}
for linea in sentimientos:
    palabra, valor = linea.split("\t")
    valores[palabra] = int(valor)
#valores

"""Una vez tenemos los sentimientos organizados, queremos acceder al fichero Tweets.txt para leer los tweets y organizarnoslos en una lista de diccionarios para leerlos de una manera mas sencilla"""

import json
tweets = []
for line in open('Tweets.txt', 'r'):
    tweets.append(json.loads(line))
#tweets

"""ahora que lo tenemos organizado como una lista de diccionarios solo tenemos que filtrar cada diccionario y quedarnos con las claves "text", organizandolo a su vez en un diccionario enumerado"""

import re
alltwt=[]
for i in range(len(tweets)):
  for key in tweets[i]:
    if key == 'text':
      t=tweets[i]['text']
      b=' '.join(re.sub("(@[A-Za-z0]+)|([^A-Za-z \t])|(\w+:\/\/\S+)","",t).split())
      alltwt.append(b) #me da una lista con los tweets limpios, pero quedan listas vacias
    else:
      continue

alltwt=[element for element in alltwt if element !=''] #asi nos hemos quitados las listas vacias

twtsplt=[]
for word in alltwt:
  a=word.split()
  twtsplt.append(a) #asi hemos creado una lista de listas de palabras de cada tweet

#twtsplt
#alltwt

"""Tenemos ahora el diccionario valores (organizado por (palabra, valor)) y la lista twtsplit de tweets ya separados por palabras, vamos a crear un bucle que solicitado un numero de tweet, nos devuelva ese tweet y su valor"""

print('pon un numero del 0 al 367 para ver el tweet y su valor: ')
i= int(input())
tweet=alltwt[i]
count=0
for words in twtsplt[i]:#busca las plabaras en la lista correspondiente al indice
  words=words.lower()
  if words in valores.keys():#si la palabra esta en valores
    count += valores[words]
  else:
    count += 0
print('el tweet:\n'  + tweet +'\ntiene un valor de:',count)

"""Ahora con una lista creada por mí, dejo un ejemplo de que el codigo anterior recorre la lista de la manera que nosotros queremos y va sumando el valor sentimental de cada tweet"""

#a = ['abandoned','abuse','accusation','lo', 'que','le', 'hizo','a','david','luiz','jajajajajajajajajajaj',igual','se','jodio','la','carrera']
#c=0
#for words in a:
#  if words in valores.keys():#si la palabra esta en valores
#    c+=valores[words]
#print(c)

"""ahora vamos a almacenarlo todo en una lista de tuplas de la forma (tweet,valor)."""

list_twt_valor=[]
for lista in twtsplt:
  i=0
  for palabras in lista:#busca las plabaras en la lista correspondiente al indice
    palabras=palabras.lower()
    if palabras in valores.keys():#si la palabra esta en valores
      i += valores[palabras]
    else:
      i += 0
  lista_final = ' '.join(lista)
  list_twt_valor.append((lista_final,i))
list_twt_valor

"""# Parte 2

Una vez tenemos cada tweet limpio con su valor, vamos a asignar a cada palabra que no estuviese en el fichero de los sentimientos un sentimiento relacionado con el sentimiento del tweet en el que aparece.
"""

valors={}
for twt in twtsplt:
  for palabra in twt:#busca las plabaras en la lista correspondiente al indice
    palabra=palabra.lower()
    if palabra in valors.keys():
      continue
    else:
      if palabra in valores.keys():
        continue
      else:
        valors[palabra]=list_twt_valor[twtsplt.index(twt)][1]
        
#tenemos un diccionario con las palabras que no tenian sentimiento, 
#ahora uniremos los dos diccionarios de sentimientos para tener todas las palabras en uno solo
todos_los_valores={**valores,**valors}
todos_los_valores

